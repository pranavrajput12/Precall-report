version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8100:8100"
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=sqlite:///./config.db
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./config:/app/config
      - ./faq_knowledge_base.csv:/app/faq_knowledge_base.csv
    command: python app.py

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./config:/app/config
    command: celery -A tasks worker --loglevel=info

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8100
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend

volumes:
  redis_data: